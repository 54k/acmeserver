package com.acme.gameserver.system;

import com.acme.core.ashley.Wired;
import com.acme.gameserver.component.InvulnerableComponent;
import com.acme.gameserver.component.PositionComponent;
import com.badlogic.ashley.core.ComponentMapper;
import com.badlogic.ashley.core.Entity;
import com.badlogic.ashley.core.Family;
import com.badlogic.ashley.systems.IteratingSystem;

@Wired
public class InvulnerabilitySystem extends IteratingSystem {

    private ComponentMapper<InvulnerableComponent> icm;
    private ComponentMapper<PositionComponent> pcm;

    public InvulnerabilitySystem() {
        //noinspection unchecked
        super(Family.all(InvulnerableComponent.class).get());
    }

    @Override
    protected void processEntity(Entity entity, float deltaTime) {
        InvulnerableComponent invulnerableComponent = icm.get(entity);
        float cooldown = invulnerableComponent.getCooldown() - deltaTime;
        if (!pcm.get(entity).isSpawned()
                || cooldown <= 0) {
            entity.remove(InvulnerableComponent.class);
        } else {
            invulnerableComponent.setCooldown(cooldown);
        }
    }
}
